name: Release
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  PNPM_VERSION: 9.7.0

jobs:
  build:
    permissions:
      contents: write
      packages: write
      pull-requests: write
      repository-projects: read
    runs-on: ubuntu-latest
    outputs:
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
      publishedPackages: ${{ steps.changesets.outcome.publishedPackages }}
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: Create release pull-request of publish
        uses: changesets/action@v1
        id: changesets
        with:
          publish: pnpm run release
          version: pnpm run version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  push-backend-docker-container:
    needs:
      - build
    if: needs.build.outputs.hasChangesets == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        id: publishversion
        with:
          script: |
            const versions = JSON.parse("${{ needs.build.outputs.publishedPackages }}")
            const applicationVersion = versions.find(v => v.name === '@overtheairbrew/backend');
            return applicationVersion.version || ''
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker image
        if: steps.publishversion.outputs.result != ''
        uses: docker/build-push-action@v5
        with:
          context: ./apps/backend
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            overtheairbrew/brewery-platform-backend:${{ steps.publishversion.outputs.result }}
